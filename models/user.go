// C:\GoProject\src\eShop\models\user.go

package models

import "time"

type User struct {
	ID                    uint       `gorm:"primaryKey" json:"id"`                          // Уникальный идентификатор пользователя...
	FullName              string     `gorm:"size:255;not null" json:"full_name"`            // Полное имя пользователя...
	Username              string     `gorm:"size:255;not null;unique" json:"username"`      // Логин пользователя...
	Email                 string     `gorm:"size:255;not null;uniqueIndex" json:"email"`    // Email пользователя...
	PassportNumber        string     `gorm:"size:20;uniqueIndex" json:"passport_number"`    // Паспортные данные пользователя...
	Password              string     `gorm:"size:255;not null" json:"password"`             // Пароль пользователя...
	PasswordResetRequired bool       `gorm:"default:true" json:"password_reset_required"`   // Флаг обязательной смены пароля...
	Status                string     `gorm:"size:20;not null;default:active" json:"status"` // Статус пользователя (active, blocked, canceled)...
	CreatedAt             time.Time  `gorm:"default:CURRENT_TIMESTAMP" json:"created_at"`   // Время создания...
	UpdatedAt             *time.Time `json:"updated_at"`                                    // Время последнего обновления...
	DeletedAt             *time.Time `json:"deleted_at"`                                    // Время удаления...
	IsDeleted             bool       `gorm:"default:false" json:"is_deleted"`               // Флаг удаления...

	// Связи
	Phones   []Phone   `gorm:"foreignKey:UserID;constraint:OnDelete:CASCADE" json:"phones"`   // Связь с таблицей телефонов...
	Wallets  []Wallet  `gorm:"foreignKey:UserID;constraint:OnDelete:CASCADE" json:"wallets"`  // Связь с таблицей кошельков...
	Accounts []Account `gorm:"foreignKey:UserID;constraint:OnDelete:CASCADE" json:"accounts"` // Связь с таблицей счетов...
}

func (User) TableName() string {
	return "users"
}

// SwagUser представляет структуру пользователя с основными данными для Swagger-документации
type SwagUser struct {
	FullName string `json:"full_name"` // Полное имя пользователя...
	Username string `json:"username"`  // Логин для входа в систему...
	Email    string `json:"email"`     // Адрес электронной почты пользователя...
	Password string `json:"password"`  // Пароль для аутентификации...
	Status   string `json:"status"`    // Статус пользователя (active, blocked, canceled)...
}

// SignInInput определяет структуру входных данных для аутентификации
type SignInInput struct {
	Username string `json:"username" gorm:"unique"`   // Логин для входа в систему...
	Password string `json:"password" gorm:"not null"` // Пароль для аутентификации...
}

// UserResponse представляет укороченную версию модели User для вывода в API
type UserResponse struct {
	ID                    uint       `json:"id"`                      // Уникальный идентификатор пользователя...
	FullName              string     `json:"full_name"`               // Полное имя пользователя...
	Username              string     `json:"username"`                // Логин пользователя...
	Email                 string     `json:"email"`                   // Email пользователя...
	Phone                 string     `json:"phone"`                   // Телефон пользователя...
	PasswordResetRequired bool       `json:"password_reset_required"` // Флаг обязательной смены пароля...
	Status                string     `json:"status"`                  // Статус пользователя (active, blocked, canceled)...
	CreatedAt             time.Time  `json:"created_at"`              // Время создания записи...
	DeletedAt             *time.Time `json:"deleted_at,omitempty"`    // Время удаления записи...
	IsDeleted             bool       `json:"is_deleted"`              // Флаг удаления записи...
}
