// File: C:\GoProject\src\eWalletGo_TestTask\models\user.go

package models

import "time"

type User struct {
	ID                    uint       `gorm:"primaryKey" json:"id"`                          // Unique user identifier...
	FullName              string     `gorm:"size:255;not null" json:"full_name"`            // Full name of the user...
	Username              string     `gorm:"size:255;not null;unique" json:"username"`      // User login...
	Email                 string     `gorm:"size:255;not null;uniqueIndex" json:"email"`    // User email...
	PassportNumber        string     `gorm:"size:20;uniqueIndex" json:"passport_number"`    // User passport data...
	Password              string     `gorm:"size:255;not null" json:"password"`             // User password...
	PasswordResetRequired bool       `gorm:"default:true" json:"password_reset_required"`   // Password reset required flag...
	Role                  string     `gorm:"size:20;default:'user'" json:"role"`            // User role (e.g., user, manager)...
	Status                string     `gorm:"size:20;not null;default:active" json:"status"` // User status (active, blocked, canceled)...
	CreatedAt             time.Time  `gorm:"default:CURRENT_TIMESTAMP" json:"created_at"`   // Creation time...
	UpdatedAt             *time.Time `json:"updated_at"`                                    // Last update time...
	DeletedAt             *time.Time `json:"deleted_at"`                                    // Deletion time...
	IsDeleted             bool       `gorm:"default:false" json:"is_deleted"`               // Deletion flag...

	// Relationships
	Phones   []Phone   `gorm:"foreignKey:UserID;constraint:OnDelete:CASCADE" json:"phones"`   // Relationship with the phones table...
	Wallets  []Wallet  `gorm:"foreignKey:UserID;constraint:OnDelete:CASCADE" json:"wallets"`  // Relationship with the wallets table...
	Accounts []Account `gorm:"foreignKey:UserID;constraint:OnDelete:CASCADE" json:"accounts"` // Relationship with the accounts table...
}

func (User) TableName() string {
	return "users"
}

// SwagUser represents the user structure with main data for Swagger documentation
type SwagUser struct {
	FullName string `json:"full_name"` // Full name of the user...
	Username string `json:"username"`  // Login for system access...
	Email    string `json:"email"`     // User email address...
	Password string `json:"password"`  // Password for authentication...
	Status   string `json:"status"`    // User status (active, blocked, canceled)...
}

// SignInInput defines the input structure for authentication
type SignInInput struct {
	Username string `json:"username" gorm:"unique"`   // Login for system access...
	Password string `json:"password" gorm:"not null"` // Password for authentication...
}

// UserResponse represents a shortened version of the User model for API output
type UserResponse struct {
	ID                    uint       `json:"id"`                      // Unique user identifier...
	FullName              string     `json:"full_name"`               // Full name of the user...
	Username              string     `json:"username"`                // User login...
	Email                 string     `json:"email"`                   // User email...
	Phone                 string     `json:"phone"`                   // User phone number...
	PasswordResetRequired bool       `json:"password_reset_required"` // Password reset required flag...
	Status                string     `json:"status"`                  // User status (active, blocked, canceled)...
	CreatedAt             time.Time  `json:"created_at"`              // Record creation time...
	DeletedAt             *time.Time `json:"deleted_at,omitempty"`    // Record deletion time...
	IsDeleted             bool       `json:"is_deleted"`              // Deletion flag...
}
